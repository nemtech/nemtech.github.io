##############
Entity Schemas
##############

.. note:: The `catbuffer schemas <https://github.com/symbol/catbuffer-schemas>`_ repository defines how each transaction type should be serialized. In combination with the `catbuffer-generators <https://github.com/symbol/catbuffer-generators>`_ project, developers can generate builder classes for a given set of programming languages. 

******
Entity
******

.. _entity-type:

EntityType
==========

Enumeration: uint16

.. csv-table::
    :header: "Id", "Description"
    :delim: ;

    0x0000; Reserved.

.. _network-type:

NetworkType
===========

Enumeration: uint8

.. csv-table::
    :header: "Id", "Description"
    :delim: ;

    0x68; (MAIN_NET) Public network.
    0x98; (TEST_NET) Public test network.
    0x60; (PRIVATE) Private network.
    0x90; (PRIVATE_TEST) Private test network.

.. _size-prefixed-entity:

SizePrefixedEntity
==================

Serialization of an entity that has a prefixed size.

.. csv-table::
    :header: "Property", "Type", "Description"
    :delim: ;

    size; unit32; Size of the transaction.

.. _verifiable-entity:

VerifiableEntity
================

Serialization of an entity that should be signed by an account.

.. csv-table::
    :header: "Property", "Type", "Description"
    :delim: ;

    verifiableEntityHeader_Reserved1; uint32; reserved padding to align Signature on 8-byte boundary.
    signature; :schema:`Signature <types.cats>`; Entity signature generated by the signer.

.. _entity-body:

EntityBody
==========

Serialization of an entity.
An entity could be a block or a :doc:`transaction <transaction>`.

.. csv-table::
    :header: "Property", "Type", "Description"
    :delim: ;

    signerPublicKey; :schema:`Key <types.cats>`; Public key of the signer of the entity.
    entityBody_Reserved1; uint32; Reserved padding to align end of EntityBody on 8-byte boundary.
    version; uint8; Version of the structure.
    network; :ref:`Network <network-type>`; Entity network.
    type; :ref:`EntityType <entity-type>`; Entity type.
